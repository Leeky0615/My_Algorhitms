'''
    회의실 배정 문제
    한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를
    만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가
    겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는
    한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될
    수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자
    끝나는 것으로 생각하면 된다.

    시간 제한 2초 / 메모리 제한 128MB
    입력 조건. 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지
             각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는
             시간이 주어진다. 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수
             또는 0이다.
    출력 조건. 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.
    힌트. (1,4), (5,7), (8,11), (12,14) 를 이용할 수 있다.
입력 예제
11
1 4
3 5
0 6
5 7
3 8
5 9
6 10
8 11
8 12
2 13
12 14
출력 예제
4
'''


n = int(input())
# 입력 받은 값을 배열로
start_end = [[int(x) for x in input().split()] for _ in range(n)]
# 끝나는 시간을 기준으로 정렬
start_end.sort(key=lambda x: (x[1], x[0]))

meeting = []
for i in range(len(start_end)):
    # 초기에 meeting이 하나도 없다면 i 추가
    if not meeting:
        meeting.append(start_end[i])
    else:
        # 현재 회의 시간은 meeting배열의 제일 마지막 원소
        s, e = meeting[-1]
        # 다음 시간은 for문에서 현재 비교하고자 하는 시간.
        ns, ne = start_end[i]
        if ns >= e: # 다음 시간의 시작 시간이 현재 시간의 끝시간과 같거나 크다면 다음 회의의 추가
            meeting.append(start_end[i])

print(len(meeting))
